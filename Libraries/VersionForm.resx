<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="VersionControl.Logo" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>